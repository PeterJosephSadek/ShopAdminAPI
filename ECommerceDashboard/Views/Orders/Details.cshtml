@model ECommerceDashboard.DAL.Entities.Orders.Order

@{
    ViewData["Title"] = "Order Details";
}

<!-- Bootstrap 5 CDN -->
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet">
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>


<div class="container py-4">
    <div class="card shadow-sm mb-4">
        <div class="card-body">
            <h3 class="card-title mb-3">Order Summary</h3>
            <div class="row mb-2">
                <div class="col-md-6">
                    <strong>Order ID:</strong> @Model.Id
                </div>
                <div class="col-md-6">
                    <strong>Order Date:</strong> @Model.CreatedOn.ToString()
                </div>
            </div>
            <div class="row mb-2">
                <div class="col-md-6">
                    <strong>Customer Name:</strong> @Model.CustomerName
                </div>
                <div class="col-md-6">
                    <strong>Shipping Address:</strong> @Model.Address
                </div>
            </div>
            <div class="row mb-2">
                <div class="col-md-6">
                    <strong>Delivery:</strong> @Model.Delivery.Region
                </div>
            </div>
            <div class="row mb-2">
                <div class="col-md-6">
                    <strong>Address Location:</strong> @Model.AddressLocation
                </div>
            </div>
        </div>
    </div>

    <div class="card shadow-sm">
        <div class="card-body">
            <h4 class="card-title mb-3">Order Items</h4>
            <div class="table-responsive">
                <table class="table table-hover align-middle">
                    <thead class="table-light">
                        <tr>
                            <th scope="col">#</th>
                            <th scope="col">Product Name</th>
                            <th scope="col">Quantity</th>
                            <th scope="col">Unit Price</th>
                            <th scope="col">Total</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model.OrderItems)
                        {
                            int i = 1;
                            <tr>
                                <td>@i</td>
                                <td>@item.Product.Name</td>
                                <td>@item.Quantity</td>
                                <td>@item.Price</td>
                                <td>@(item.Quantity * item.Price)</td>
                            </tr>
                            i++;
                        }

                    </tbody>
                </table>
            </div>
            <!-- Order Total and Status -->
            <div class="row mt-4">
                <div class="col-md-6">
                    <h5>
                        Order Status:
                        @if (Model.Status == null)
                        {
                            <span class="badge bg-warning text-dark">Pending</span>
                        }
                        else
                        {
                            <span class="badge bg-@Model.Status.Color">@Model.Status.Name</span>
                        }
                    </h5>
                </div>
                <div class="col-md-6 text-end">
                    <h5 class="fw-bold">
                        Total Price:
                        @{
                            var total = Model.OrderItems.Sum(item => item.Quantity * item.Price);
                        }
                        @total.ToString("C")
                    </h5>
                </div>
            </div>
        </div>
    </div>
</div>
