@using ECommerceDashboard.DAL.Entities.Orders
@model Order

@{
    ViewData["Title"] = "Create Order";
}

<div class="container mt-4">
    <div class="row justify-content-center">
        <div class="col-lg-10">
            <div class="card shadow">
                <div class="card-header bg-primary text-white">
                    <h2 class="card-title mb-0">
                        <i class="fas fa-plus-circle me-2"></i>Create New Order
                    </h2>
                </div>
                <div class="card-body">
                    @if (TempData["Success"] != null)
                    {
                        <div class="alert alert-success alert-dismissible fade show">
                            @TempData["Success"]
                            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                        </div>
                    }

                    <form asp-action="Create" id="orderForm">
                        <div asp-validation-summary="ModelOnly" class="text-danger mb-3"></div>

                        <!-- Customer Information -->
                        <div class="card mb-4">
                            <div class="card-header">
                                <h5 class="mb-0">Customer Information</h5>
                            </div>
                            <div class="card-body">
                                <div class="row">
                                    <div class="col-md-6">
                                        <div class="form-group mb-3">
                                            <label asp-for="CustomerName" class="form-label">Customer Name</label>
                                            <input asp-for="CustomerName" class="form-control" placeholder="Enter customer name" />
                                            <span asp-validation-for="CustomerName" class="text-danger"></span>
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="form-group mb-3">
                                            <label asp-for="PhoneNumber" class="form-label">Phone Number</label>
                                            <input asp-for="PhoneNumber" class="form-control" placeholder="Enter phone number" />
                                            <span asp-validation-for="PhoneNumber" class="text-danger"></span>
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-md-12">
                                        <div class="form-group mb-3">
                                            <label asp-for="Address" class="form-label">Address</label>
                                            <textarea asp-for="Address" class="form-control" rows="3" placeholder="Enter delivery address"></textarea>
                                            <span asp-validation-for="Address" class="text-danger"></span>
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-md-12">
                                        <div class="form-group mb-3">
                                            <label asp-for="Comment" class="form-label">Comment (Optional)</label>
                                            <textarea asp-for="Comment" class="form-control" rows="2" placeholder="Any special instructions or comments"></textarea>
                                            <span asp-validation-for="Comment" class="text-danger"></span>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <!-- Order Items -->
                        <div class="card mb-4">
                            <div class="card-header d-flex justify-content-between align-items-center">
                                <h5 class="mb-0">Order Items</h5>
                                <button type="button" class="btn btn-success btn-sm" id="addItemBtn">
                                    <i class="fas fa-plus"></i> Add Product
                                </button>
                            </div>
                            <div class="card-body">
                                <div id="orderItemsContainer">
                                    @if (Model.OrderItems != null && Model.OrderItems.Any())
                                    {
                                        
                                        var orderItemsList = Model.OrderItems.ToList();
                                        
                                        @for (int i = 0; i < orderItemsList.Count; i++)
                                        {
                                            <div class="order-item-row mb-3" data-index="@i">
                                                <div class="row align-items-end">
                                                    <div class="col-md-4">
                                                        <label class="form-label">Product</label>
                                                        <select name="OrderItems[@i].ProductId" class="form-select product-select" asp-items="ViewBag.Products">
                                                            <option value="">Select Product</option>
                                                        </select>
                                                        <span asp-validation-for="@orderItemsList[i].ProductId" class="text-danger"></span>
                                                    </div>
                                                    <div class="col-md-2">
                                                        <label class="form-label">Quantity</label>
                                                        <input name="OrderItems[@i].Quantity" class="form-control quantity-input" type="number" min="1" value="@orderItemsList[i].Quantity" />
                                                        <span asp-validation-for="@orderItemsList[i].Quantity" class="text-danger"></span>
                                                    </div>
                                                    <div class="col-md-2">
                                                        <label class="form-label">Unit Price</label>
                                                        <input type="text" class="form-control unit-price" readonly placeholder="0.00" />
                                                    </div>
                                                    <div class="col-md-2">
                                                        <label class="form-label">Total Price</label>
                                                        <input type="text" class="form-control item-total" readonly placeholder="0.00" />
                                                    </div>
                                                    <div class="col-md-2">
                                                        <button type="button" class="btn btn-danger btn-sm remove-item-btn" style="margin-top: 8px;">
                                                            <i class="fas fa-trash"></i>
                                                        </button>
                                                    </div>
                                                </div>
                                            </div>
                                        }
                                    }
                                    else
                                    {
                                        <div class="order-item-row mb-3" data-index="0">
                                            <div class="row align-items-end">
                                                <div class="col-md-4">
                                                    <label class="form-label">Product</label>
                                                    <select name="OrderItems[0].ProductId" class="form-select product-select" asp-items="ViewBag.Products">
                                                        <option value="">Select Product</option>
                                                    </select>
                                                </div>
                                                <div class="col-md-2">
                                                    <label class="form-label">Quantity</label>
                                                    <input name="OrderItems[0].Quantity" class="form-control quantity-input" type="number" min="1" value="1" />
                                                </div>
                                                <div class="col-md-2">
                                                    <label class="form-label">Unit Price</label>
                                                    <input type="text" class="form-control unit-price" readonly placeholder="0.00" />
                                                </div>
                                                <div class="col-md-2">
                                                    <label class="form-label">Total Price</label>
                                                    <input type="text" class="form-control item-total" readonly placeholder="0.00" />
                                                </div>
                                                <div class="col-md-2">
                                                    <button type="button" class="btn btn-danger btn-sm remove-item-btn" style="margin-top: 8px;">
                                                        <i class="fas fa-trash"></i>
                                                    </button>
                                                </div>
                                            </div>
                                        </div>
                                    }
                                </div>
                            </div>
                        </div>

                        <!-- Order Summary -->
                        <div class="card mb-4">
                            <div class="card-header">
                                <h5 class="mb-0">Order Summary</h5>
                            </div>
                            <div class="card-body">
                                <div class="row">
                                    <div class="col-md-6 offset-md-6">
                                        <div class="d-flex justify-content-between">
                                            <strong>Total Amount:</strong>
                                            <strong class="text-primary">
                                                $<span id="totalAmount">0.00</span>
                                            </strong>
                                        </div>
                                        <input asp-for="TotalPrice" type="hidden" id="totalPriceInput" />
                                    </div>
                                </div>
                            </div>
                        </div>

                        <!-- Form Actions -->
                        <div class="row">
                            <div class="col-md-12 text-end">
                                <a asp-action="Index" class="btn btn-secondary me-2">
                                    <i class="fas fa-arrow-left"></i> Back to List
                                </a>
                                <button type="submit" class="btn btn-primary">
                                    <i class="fas fa-save"></i> Create Order
                                </button>
                            </div>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
document.addEventListener('DOMContentLoaded', function() {
    let itemIndex = @(Model.OrderItems?.Count() ?? 1);
    
    // Add new item functionality
    document.getElementById('addItemBtn').addEventListener('click', function() {
        const container = document.getElementById('orderItemsContainer');
        const newRow = createOrderItemRow(itemIndex);
        container.appendChild(newRow);
        itemIndex++;
    });

    // Remove item functionality
    document.addEventListener('click', function(e) {
        if (e.target.classList.contains('remove-item-btn') || e.target.parentElement.classList.contains('remove-item-btn')) {
            const row = e.target.closest('.order-item-row');
            if (document.querySelectorAll('.order-item-row').length > 1) {
                row.remove();
                reindexItems();
                calculateTotal();
            } else {
                alert('At least one item is required.');
            }
        }
    });

    // Product selection change
    document.addEventListener('change', function(e) {
        if (e.target.classList.contains('product-select')) {
            const row = e.target.closest('.order-item-row');
            const productId = e.target.value;
            
            if (productId) {
                fetch(`/Order/GetProductPrice?productId=${productId}`)
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            const unitPriceInput = row.querySelector('.unit-price');
                            unitPriceInput.value = data.price.toFixed(2);
                            calculateRowTotal(row);
                        }
                    });
            } else {
                row.querySelector('.unit-price').value = '';
                row.querySelector('.item-total').value = '';
                calculateTotal();
            }
        }
    });

    // Quantity change
    document.addEventListener('input', function(e) {
        if (e.target.classList.contains('quantity-input')) {
            const row = e.target.closest('.order-item-row');
            calculateRowTotal(row);
        }
    });

    function createOrderItemRow(index) {
        const div = document.createElement('div');
        div.className = 'order-item-row mb-3';
        div.setAttribute('data-index', index);
        
        const productOptions = '@Html.Raw(Html.DropDownList("temp", ViewBag.Products as SelectList, "Select Product", new { @class = "form-select product-select" }).ToString().Replace("temp", "OrderItems[" + "' + index + '").Replace("\"", "\\\""))';
        
        div.innerHTML = `
            <div class="row align-items-end">
                <div class="col-md-4">
                    <label class="form-label">Product</label>
                    <select name="OrderItems[${index}].ProductId" class="form-select product-select">
                        <option value="">Select Product</option>
                        @foreach (var product in ViewBag.Products as SelectList)
                        {
                            <option value="@product.Value">@product.Text</option>
                        }
                    </select>
                </div>
                <div class="col-md-2">
                    <label class="form-label">Quantity</label>
                    <input name="OrderItems[${index}].Quantity" class="form-control quantity-input" type="number" min="1" value="1" />
                </div>
                <div class="col-md-2">
                    <label class="form-label">Unit Price</label>
                    <input type="text" class="form-control unit-price" readonly placeholder="0.00" />
                </div>
                <div class="col-md-2">
                    <label class="form-label">Total Price</label>
                    <input type="text" class="form-control item-total" readonly placeholder="0.00" />
                </div>
                <div class="col-md-2">
                    <button type="button" class="btn btn-danger btn-sm remove-item-btn" style="margin-top: 8px;">
                        <i class="fas fa-trash"></i>
                    </button>
                </div>
            </div>
        `;
        
        return div;
    }

    function calculateRowTotal(row) {
        const unitPrice = parseFloat(row.querySelector('.unit-price').value) || 0;
        const quantity = parseInt(row.querySelector('.quantity-input').value) || 0;
        const total = unitPrice * quantity;
        
        row.querySelector('.item-total').value = total.toFixed(2);
        calculateTotal();
    }

    function calculateTotal() {
        let total = 0;
        document.querySelectorAll('.item-total').forEach(function(input) {
            total += parseFloat(input.value) || 0;
        });
        
        document.getElementById('totalAmount').textContent = total.toFixed(2);
        document.getElementById('totalPriceInput').value = total.toFixed(2);
    }

    function reindexItems() {
        const rows = document.querySelectorAll('.order-item-row');
        rows.forEach(function(row, index) {
            row.setAttribute('data-index', index);
            row.querySelector('.product-select').name = `OrderItems[${index}].ProductId`;
            row.querySelector('.quantity-input').name = `OrderItems[${index}].Quantity`;
        });
    }

    // Initialize calculations for existing items
    document.querySelectorAll('.product-select').forEach(function(select) {
        if (select.value) {
            const row = select.closest('.order-item-row');
            const productId = select.value;
            
            fetch(`/Order/GetProductPrice?productId=${productId}`)
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        const unitPriceInput = row.querySelector('.unit-price');
                        unitPriceInput.value = data.price.toFixed(2);
                        calculateRowTotal(row);
                    }
                });
        }
    });
});
</script>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}